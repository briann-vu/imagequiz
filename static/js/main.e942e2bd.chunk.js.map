{"version":3,"sources":["components/flowers.js","components/Home.js","communication/customers.js","components/SignUp.js","components/LogIn.js","components/data.js","components/Question.js","components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["flowers","name","picture","Home","useState","history","useLocation","useHistory","Container","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","className","Link","map","flower","i","Figure","onClick","flowerName","push","pathname","state","class","Image","alt","src","Caption","customers","SignUp","username","setUsername","password","setPassword","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","LogIn","find","x","console","log","quizzes","questionIndex","questions","choiceIndex","length","question","choices","answer","generateQuestions","quiz","generateQuizzes","Question","props","Table","ListGroup","array","places","item","index","rInd","Math","floor","random","placesVal","splice","shuffle","choice","Item","isCorrect","choiceSelected","action","Quiz","currentIndex","setCurrentIndex","score","setScore","isOver","setIsOver","location","retry","goHome","y","numOfQuestions","onChoiceSelected","displayTheQuiz","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e942e2bd.chunk.js","sourcesContent":["let flowers = [\n    {\n        name: \"Acacia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\n    },\n    {\n        name: \"Alyssum\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\n    },\n    {\n        name: \"Amaryllis\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\n    },\n    {\n        name: \"Aster\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\n    },\n    {\n        name: \"Azalea\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\n    },\n    {\n        name: \"Begonia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\n    },\n    {\n        name: \"Buttercup\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\n    },\n    {\n        name: \"Calluna\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\n    },\n    {\n        name: \"Camellia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\n    },\n    {\n        name: \"Cardinal\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\n    },\n    {\n        name: \"Carnation\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\n    },\n    {\n        name: \"Clover\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\n    },\n    {\n        name: \"Crown Imperial\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\n    },\n    {\n        name: \"Daffodil\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\n    },\n    {\n        name: \"Dahlia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\n    },\n    {\n        name: \"Daisy\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\n    },\n    {\n        name: \"Gladiolus\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\n    },\n    {\n        name: \"Lantana\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\n    },\n    {\n        name: \"Lily\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\n    },\n    {\n        name: \"Lotus\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\n    },\n    {\n        name: \"Marigold\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\n    },\n    {\n        name: \"Orchid\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\n    },\n    {\n        name: \"Primrose\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\n    },\n    {\n        name: \"Sunflower\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\n    },\n    {\n        name: \"Tickseed\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\n    },\n    {\n        name: \"Tulip\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\n    },\n    {\n        name: \"Zinnia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\n    }\n];\n\nexport default flowers;","\nimport flowers from './flowers';\nimport * as ReactBootStrap from 'react-bootstrap'\nimport Figure from 'react-bootstrap/Figure'\nimport Container from 'react-bootstrap/Container'\nimport { useLocation } from 'react-router-dom'\nimport { useState } from 'react'\nimport {\n    HashRouter,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom'\n\nfunction Home() {\n\n\n    const [username] = useState('');\n    const location = useLocation();\n    const history = useHistory();\n    //location.state.username = 'user'\n\n    let goToQuiz = (flowerName) => {\n        history.push({ pathname: '/quiz', state: { flowerName: flowerName } });\n    }\n\n\n    return (\n        <div>\n            <Container>\n                <ReactBootStrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <ReactBootStrap.Container>\n                        <ReactBootStrap.Navbar.Brand href=\"#/\">Image Quiz</ReactBootStrap.Navbar.Brand>\n                        <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                            <ReactBootStrap.Nav className=\"me-auto\">\n                                <ReactBootStrap.Nav.Link href=\"#signup\">Sign Up</ReactBootStrap.Nav.Link>\n                                <ReactBootStrap.Nav.Link href=\"#login\">Log In</ReactBootStrap.Nav.Link>\n                                {//for now, until i add functionality to images\n                                }\n                            </ReactBootStrap.Nav>\n                            <ReactBootStrap.Nav>\n                            </ReactBootStrap.Nav>\n                        </ReactBootStrap.Navbar.Collapse>\n                    </ReactBootStrap.Container>\n                </ReactBootStrap.Navbar>\n            </Container>\n            <Container>\n                <h1>Welcome to the Image Quiz home screen! Click an image to start a quiz!</h1>\n\n                {/* \n                    <h1>Welcome to the Image Quiz home screen, {location.state.username}!</h1>\n                */}\n\n                {flowers.map((flower, i) => (\n                    <div key={`flower ${i}`}>\n\n                        <Figure onClick={() => goToQuiz(flower.name)} class=\"text-center\">\n                            <Figure.Image\n\n                                alt={flower.name}\n                                src={flower.picture}\n                            />\n                            <Figure.Caption>\n                                {flower.name}\n                            </Figure.Caption>\n                        </Figure>\n                    </div>\n                ))}\n            </Container>\n        </div>\n\n    );\n}\n\nexport default Home;\n\n/*\n<img src={flower.picture} alt='flower' fluid/>\n                    <p>{flower.name}</p>\n*/\n","\nvar customers = [];\n\nexport default customers;","import * as ReactBootStrap from 'react-bootstrap'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport { useState } from 'react'\nimport customers from '../communication/customers'\n\nfunction SignUp() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    let saveCustomer = (e) => {\n        e.preventDefault();\n        customers.push({ username: username, password: password });\n    }\n\n    let onUsernameChanged = (e) => {\n        setUsername(e.target.value);\n    }\n\n    let onPasswordChanged = (e) => {\n        setPassword(e.target.value);\n    }\n\n    return (\n        <div>\n            <Container>\n                <ReactBootStrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <ReactBootStrap.Container>\n                        <ReactBootStrap.Navbar.Brand href=\"#/\">Image Quiz</ReactBootStrap.Navbar.Brand>\n                        <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                            <ReactBootStrap.Nav className=\"me-auto\">\n                                <ReactBootStrap.Nav.Link href=\"#login\">login</ReactBootStrap.Nav.Link>\n                            </ReactBootStrap.Nav>\n                            <ReactBootStrap.Nav>\n                            </ReactBootStrap.Nav>\n                        </ReactBootStrap.Navbar.Collapse>\n                    </ReactBootStrap.Container>\n                </ReactBootStrap.Navbar>\n            </Container>\n            <Container>\n                <h1>Sign up!</h1>\n\n\n\n                <Form onSubmit={saveCustomer}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={username} onChange={onUsernameChanged} />\n\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChanged} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Sign Up\n                    </Button>\n                </Form>\n            </Container>\n\n        </div>\n    );\n}\n\n\nexport default SignUp;","import * as ReactBootStrap from 'react-bootstrap'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport customers from '../communication/customers'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction LogIn() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n\n    let login = (e) => {\n        e.preventDefault();\n        let found = customers.find(x => x.username === username & x.password === password);\n        if (found) {\n            console.log('found');\n            history.push({ pathname: '/', state: { username: username } });\n        }\n    }\n\n    let onUsernameChanged = (e) => {\n        setUsername(e.target.value);\n    }\n\n    let onPasswordChanged = (e) => {\n        setPassword(e.target.value);\n    }\n\n    return (\n        <div>\n            <Container>\n                <ReactBootStrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <ReactBootStrap.Container>\n                        <ReactBootStrap.Navbar.Brand href=\"#/\">Image Quiz</ReactBootStrap.Navbar.Brand>\n                        <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <ReactBootStrap.Navbar.Collapse id=\"responsive-navbar-nav\">\n                            <ReactBootStrap.Nav className=\"me-auto\">\n                                <ReactBootStrap.Nav.Link href=\"#signup\">signup</ReactBootStrap.Nav.Link>\n                            </ReactBootStrap.Nav>\n                            <ReactBootStrap.Nav>\n                            </ReactBootStrap.Nav>\n                        </ReactBootStrap.Navbar.Collapse>\n                    </ReactBootStrap.Container>\n                </ReactBootStrap.Navbar>\n            </Container>\n            <Container>\n                <h1>Login to your account!</h1>\n                <Form onSubmit={login}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={username} onChange={onUsernameChanged} />\n\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChanged} />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Sign In\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    );\n}\n\nexport default LogIn;","import flowers from './flowers';\n\nlet generateQuestions = () => {\n    let questions = [];\n    let choiceIndex = 0;\n    for (let i = 0; i < flowers.length; i++) {\n        choiceIndex = i;\n        if (choiceIndex > (flowers.length - 4)) {\n            choiceIndex = i - 2;\n        }\n        let question = {\n            picture: flowers[i].picture,\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex + 1].name, flowers[choiceIndex + 2].name],\n            answer: flowers[i].name\n        };\n        questions.push(question);\n    }\n    return questions;\n};\n\nlet generateQuizzes = () => {\n    let quizzes = [];\n    let questionIndex = 0;\n    let questions = generateQuestions();\n    for (let i = 0; i < questions.length; i++) {\n        questionIndex = i;\n        if (questionIndex > (questions.length - 7)) {\n            questionIndex = i - 5;\n        }\n        let quiz = [\n            questions[questionIndex],\n            questions[questionIndex + 1],\n            questions[questionIndex + 2],\n            questions[questionIndex + 3],\n            questions[questionIndex + 4],\n            questions[questionIndex + 5]\n        ];\n        quizzes.push(quiz);\n    }\n    return quizzes;\n};\n\nlet quizzes = generateQuizzes();\n\n\nexport default quizzes;","import ListGroup from 'react-bootstrap/ListGroup'\nimport Figure from 'react-bootstrap/Figure'\nimport Table from 'react-bootstrap/Table'\nlet Question = (props) => {\n\n    let choiceSelected = (choice) => {\n        let isCorrect = props.question.answer === choice\n        props.choiceSelected(isCorrect)\n    }\n\n    let shuffle = (array) => {\n        let places = array.map((item, index) => index)\n        return array.map((item, index, array) => {\n            const rInd = Math.floor(Math.random() * places.length)\n            const placesVal = places[rInd]\n            places.splice(rInd, 1)\n            return array[placesVal]\n        }\n        )\n    }\n\n    return (\n        <Table>\n            <tbody>\n                <tr>\n                    <td>\n                        <Figure class=\"text-center\">\n                            <Figure.Image\n\n                                alt={'flower image'}\n                                src={props.question.picture}\n                            />\n\n                        </Figure>\n                        <ListGroup>\n                            {shuffle(props.question.choices).map(choice => <ListGroup.Item onClick={() => choiceSelected(choice)} action variant=\"light\">\n                                {choice}\n                            </ListGroup.Item>)}\n\n                        </ListGroup>\n                    </td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default Question","import quizzes from \"./data\";\nimport { useLocation } from 'react-router-dom'\nimport { Container } from \"react-bootstrap\";\nimport Question from \"./Question\";\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\nfunction Quiz() {\n    const [currentIndex, setCurrentIndex] = useState(0)\n    const [score, setScore] = useState(0)\n    const [isOver, setIsOver] = useState(false)\n    const location = useLocation()\n    const history = useHistory()\n\n\n    let retry = () => {\n        setCurrentIndex(0)\n        setScore(0)\n        setIsOver(false)\n    }\n\n    let goHome = () => {\n        history.push({ pathname: '/' });\n    }\n\n    let displayButtons = () => {\n        return (\n            <>\n                <Button onClick={retry} variant=\"secondary\">Retry</Button>{' '}\n                <Button onClick={goHome} variant=\"secondary\">Return to Home</Button>{' '}\n            </>\n        )\n    }\n\n    let displayScore = () => {\n        return (\n            <>\n                Your Score: {score}\n            </>\n        )\n    }\n\n    let onChoiceSelected = (isCorrect, numOfQuestions) => {\n        if (currentIndex < numOfQuestions - 1) {\n            setCurrentIndex(currentIndex + 1)\n        } else {\n            setIsOver(true)\n        }\n        if (isCorrect) {\n            setScore(score + 1)\n        }\n    }\n\n    let displayTheQuiz = () => {\n        let questions = quizzes.find(x => x.find(y => y.answer === location.state.flowerName))\n        if (questions) {\n            return (<Question question={questions[currentIndex]} choiceSelected={(isCorrect) => onChoiceSelected(isCorrect, questions.length)}></Question>)\n        }\n\n    }\n\n    return (\n        <Container>\n            {isOver ? '' : displayTheQuiz()}\n            {displayScore()}\n            {isOver ? displayButtons() : ''}\n        </Container>\n    );\n}\n\nexport default Quiz","\nimport './App.css';\n//npm start TO START, control c to end\n// make pretty and remove quiz from nav\n\nimport Home from './components/Home'\nimport SignUp from './components/SignUp'\nimport LogIn from './components/LogIn'\nimport Quiz from './components/Quiz'\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container'\n\nfunction App() {\n  //<Home></Home> or <Home />\n  return (\n    <HashRouter>\n      <Container>\n        <Switch>\n\n          <Route path='/signup'>\n            <SignUp></SignUp>\n          </Route>\n\n          <Route path='/login'>\n            <LogIn></LogIn>\n          </Route>\n\n          <Route exact path='/'>\n            <Home />\n          </Route>\n\n          <Route path='/quiz'>\n            <Quiz />\n          </Route>\n\n        </Switch>\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}